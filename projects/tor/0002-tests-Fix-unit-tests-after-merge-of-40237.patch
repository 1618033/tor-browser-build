From 10acc0ce99283ed0aa5c6c5d203f1b0514e60f4a Mon Sep 17 00:00:00 2001
From: David Goulet <dgoulet@torproject.org>
Date: Tue, 12 Jan 2021 10:50:01 -0500
Subject: [PATCH 2/3] tests: Fix unit tests after merge of #40237


diff --git a/src/test/test_hs_cache.c b/src/test/test_hs_cache.c
index 379f23ec72..df96b2c791 100644
--- a/src/test/test_hs_cache.c
+++ b/src/test/test_hs_cache.c
@@ -590,8 +590,8 @@ test_client_cache_decrypt(void *arg)
   /* Initialize HSDir cache subsystem */
   hs_init();
 
-  MOCK(networkstatus_get_live_consensus,
-       mock_networkstatus_get_live_consensus);
+  MOCK(networkstatus_get_reasonably_live_consensus,
+       mock_networkstatus_get_reasonably_live_consensus);
 
   /* Set consensus time */
   parse_rfc1123_time("Sat, 26 Oct 1985 13:00:00 UTC",
@@ -646,7 +646,7 @@ test_client_cache_decrypt(void *arg)
 
   hs_free_all();
 
-  UNMOCK(networkstatus_get_live_consensus);
+  UNMOCK(networkstatus_get_reasonably_live_consensus);
 }
 
 static void
@@ -660,8 +660,8 @@ test_client_cache_remove(void *arg)
 
   hs_init();
 
-  MOCK(networkstatus_get_live_consensus,
-       mock_networkstatus_get_live_consensus);
+  MOCK(networkstatus_get_reasonably_live_consensus,
+       mock_networkstatus_get_reasonably_live_consensus);
 
   /* Set consensus time. Lookup will not return the entry if it has expired
    * and it is checked against the consensus valid_after time. */
@@ -699,7 +699,7 @@ test_client_cache_remove(void *arg)
   hs_descriptor_free(desc1);
   hs_free_all();
 
-  UNMOCK(networkstatus_get_live_consensus);
+  UNMOCK(networkstatus_get_reasonably_live_consensus);
 }
 
 struct testcase_t hs_cache[] = {
diff --git a/src/test/test_hs_client.c b/src/test/test_hs_client.c
index fd84293dc2..0cd7d81eea 100644
--- a/src/test/test_hs_client.c
+++ b/src/test/test_hs_client.c
@@ -1122,8 +1122,8 @@ test_close_intro_circuits_cache_clean(void *arg)
 
   /* This is needed because of the client cache expiration timestamp is based
    * on having a consensus. See cached_client_descriptor_has_expired(). */
-  MOCK(networkstatus_get_live_consensus,
-       mock_networkstatus_get_live_consensus);
+  MOCK(networkstatus_get_reasonably_live_consensus,
+       mock_networkstatus_get_reasonably_live_consensus);
 
   /* Set consensus time */
   parse_rfc1123_time("Sat, 26 Oct 1985 13:00:00 UTC",
@@ -1188,7 +1188,7 @@ test_close_intro_circuits_cache_clean(void *arg)
   hs_descriptor_free(desc1);
   hs_free_all();
   rend_cache_free_all();
-  UNMOCK(networkstatus_get_live_consensus);
+  UNMOCK(networkstatus_get_reasonably_live_consensus);
 }
 
 static void
@@ -1209,8 +1209,8 @@ test_socks_hs_errors(void *arg)
 
   (void) arg;
 
-  MOCK(networkstatus_get_live_consensus,
-       mock_networkstatus_get_live_consensus);
+  MOCK(networkstatus_get_reasonably_live_consensus,
+       mock_networkstatus_get_reasonably_live_consensus);
   MOCK(connection_mark_unattached_ap_,
        mock_connection_mark_unattached_ap_no_close);
   MOCK(read_file_to_str, mock_read_file_to_str);
@@ -1358,7 +1358,7 @@ test_socks_hs_errors(void *arg)
 
   hs_free_all();
 
-  UNMOCK(networkstatus_get_live_consensus);
+  UNMOCK(networkstatus_get_reasonably_live_consensus);
   UNMOCK(connection_mark_unattached_ap_);
   UNMOCK(read_file_to_str);
   UNMOCK(tor_listdir);
-- 
2.25.1

